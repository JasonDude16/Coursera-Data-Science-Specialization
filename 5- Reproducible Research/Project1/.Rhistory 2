interval_mean <- function(interval = NULL) {
filter(data2, interval == as.numeric(interval))[2]
}
interval_mean()
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
data <- read.csv("./data/activity.csv")
data2 <-
data %>%
group_by(interval) %>%
summarise(mean = mean(steps, na.rm = T))
data2$interval[which.max(data2$mean)]
interval_mean()
filter(data2, interval == 10)
interval_mean(asdfsd)
interval_mean()
interval_mean <- function(interval = NULL) {
data <- filter(data2, interval == as.numeric(interval))[2]
return(data)
}
interval_mean()
interval_mean <- function(interval = NULL) {
data <- dplyr::filter(data2, interval == as.numeric(interval))[2]
return(data)
}
interval_mean()
filter(data2, interval == 10)
data <- dplyr::filter(data2, interval = as.numeric(interval))[2]
data <- dplyr::filter(data2, interval == as.numeric(interval))[2]
return(data)
interval_mean(a;lskdj)
interval_mean(10)
interval_mean <- function(interval = NULL) {
subset(data2, interval == as.numeric(interval))[2]
}
interval_mean(10)
head(data %>% group_by(date) %>% summarise(total_steps = sum(steps)))
data <- read.csv("./data/activity.csv")
head(data)
head(data %>% group_by(date) %>% summarise(total_steps = sum(steps)))
knitr::opts_chunk$set(echo = TRUE)
head(data %>% group_by(date) %>% summarise(total_steps = sum(steps)))
data %>%
group_by(date) %>%
summarise(total_steps = sum(steps)) %>%
ggplot(mapping = aes(total_steps)) +
geom_histogram() +
theme_bw()
data %>%
group_by(date) %>%
summarise(total_steps = sum(steps)) %>%
summarise(mean = mean(total_steps, na.rm = T),
median = median(total_steps, na.rm = T))
data %>%
group_by(interval) %>%
summarise(mean = mean(steps, na.rm = T)) %>%
ggplot(mapping = aes(x = interval, y = mean)) +
geom_line() +
theme_bw()
data2 <-
data %>%
group_by(interval) %>%
summarise(mean = mean(steps, na.rm = T))
data2$interval[which.max(data2$mean)]
stepsInterval <- aggregate(steps ~ interval, data = data, mean, na.rm = TRUE)
interval2steps <- function(interval) {
stepsInterval[stepsInterval$interval == interval, ]$steps
}
activityFilled <- data  # Make a new dataset with the original data
count = 0  # Count the number of data filled in
for (i in 1:nrow(activityFilled)) {
if (is.na(activityFilled[i, ]$steps)) {
activityFilled[i, ]$steps <- interval2steps(activityFilled[i, ]$interval)
count = count + 1
}
}
View(activityFilled)
colSums(is.na(data))
data[which(is.na(data)),]
colSums(is.na(activityFilled))
colSums(is.na(activityFilled))
data %>%
group_by(date) %>%
summarise(total_steps = sum(steps)) %>%
ggplot(mapping = aes(total_steps)) +
geom_histogram() +
theme_bw()
data %>%
group_by(date) %>%
summarise(total_steps = sum(steps)) %>%
summarise(mean = mean(total_steps),
median = median(total_steps))
data %>%
group_by(date) %>%
summarise(total_steps = sum(steps)) %>%
summarise(mean = mean(total_steps),
median = median(total_steps))
activityFilled %>%
group_by(date) %>%
summarise(total_steps = sum(steps)) %>%
summarise(mean = mean(total_steps),
median = median(total_steps))
data$day <- weekdays(as.Date(data$date))
data$day <- as.factor(ifelse(data$day %in% c("Monday",
"Tuesday",
"Wednesday",
"Thursday",
"Friday"),
"Weekday", "Weekend"))
data %>%
group_by(interval, day) %>%
summarise(mean = mean(steps, na.rm = T)) %>%
ggplot(mapping = aes(x = interval, y = mean)) +
geom_line() +
facet_wrap(vars(day), nrow = 2)
library(dplyr); library(ggplot2)
